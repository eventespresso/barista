{"version":3,"file":"modal.cjs.development.js","sources":["../src/Modal.tsx","../src/modalCloseButtonProps/index.tsx"],"sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n  Button,\n  Modal as ChakraModal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/core\";\n\n// import { Button } from \"@application/ui/input\";\nimport { ModalProps } from \"./types\";\n\nconst Modal: React.FC<ModalProps> = ({\n  children,\n  closeButton,\n  content,\n  destroyOnClose = true,\n  footerContent,\n  isClosable = true,\n  isOpen,\n  scrollBehavior = \"inside\",\n  title,\n  ...props\n}) => {\n  if (destroyOnClose && !isOpen) {\n    return null;\n  }\n\n  const className = classNames(props.className, \"ee-modal\");\n  const bodyClassName = classNames(props.bodyClassName, \"ee-modal__body\");\n\n  return (\n    <ChakraModal\n      closeOnOverlayClick={isClosable}\n      isCentered\n      isOpen={isOpen}\n      scrollBehavior={scrollBehavior}\n      {...props}\n    >\n      <ModalOverlay />\n      <ModalContent role=\"alertdialog\" className={className}>\n        <ModalHeader className=\"ee-modal__header\">{title}</ModalHeader>\n\n        {closeButton ? (\n          closeButton\n        ) : (\n          <ModalCloseButton isDisabled={!isClosable} />\n        )}\n\n        <ModalBody className={bodyClassName}>{children || content}</ModalBody>\n\n        {footerContent && <ModalFooter>{footerContent}</ModalFooter>}\n      </ModalContent>\n    </ChakraModal>\n  );\n};\n\nexport default Modal;\n","// import { __ } from '@wordpress/i18n';\n\n// import { ButtonProps } from '@infraUI/inputs';\n// import { Close } from '@appDisplay/icons';\n\n// import \"./styles.scss\";\n\n// const modalCloseButtonProps: ButtonProps = {\nconst modalCloseButtonProps = {\n  className: \"ee-icon-button ee-confirm-close\",\n  // icon: Close,\n};\n\nexport default modalCloseButtonProps;\n"],"names":["Modal","children","closeButton","content","destroyOnClose","footerContent","isClosable","isOpen","scrollBehavior","title","props","className","classNames","bodyClassName","React","ChakraModal","closeOnOverlayClick","isCentered","ModalOverlay","ModalContent","role","ModalHeader","ModalCloseButton","isDisabled","ModalBody","ModalFooter","modalCloseButtonProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAgBMA,KAAK,GAAyB,SAA9BA,KAA8B;MAClCC,gBAAAA;MACAC,mBAAAA;MACAC,eAAAA;iCACAC;MAAAA,kDAAiB;MACjBC,qBAAAA;6BACAC;MAAAA,0CAAa;MACbC,cAAAA;iCACAC;MAAAA,kDAAiB;MACjBC,aAAAA;MACGC;;AAEH,MAAIN,cAAc,IAAI,CAACG,MAAvB,EAA+B;AAC7B,WAAO,IAAP;AACD;;AAED,MAAMI,SAAS,GAAGC,UAAU,CAACF,KAAK,CAACC,SAAP,EAAkB,UAAlB,CAA5B;AACA,MAAME,aAAa,GAAGD,UAAU,CAACF,KAAK,CAACG,aAAP,EAAsB,gBAAtB,CAAhC;AAEA,SACEC,mBAAA,CAACC,UAAD;AACEC,IAAAA,mBAAmB,EAAEV;AACrBW,IAAAA,UAAU;AACVV,IAAAA,MAAM,EAAEA;AACRC,IAAAA,cAAc,EAAEA;KACZE,MALN,EAOEI,mBAAA,CAACI,iBAAD,MAAA,CAPF,EAQEJ,mBAAA,CAACK,iBAAD;AAAcC,IAAAA,IAAI,EAAC;AAAcT,IAAAA,SAAS,EAAEA;GAA5C,EACEG,mBAAA,CAACO,gBAAD;AAAaV,IAAAA,SAAS,EAAC;GAAvB,EAA2CF,KAA3C,CADF,EAGGP,WAAW,GACVA,WADU,GAGVY,mBAAA,CAACQ,qBAAD;AAAkBC,IAAAA,UAAU,EAAE,CAACjB;GAA/B,CANJ,EASEQ,mBAAA,CAACU,cAAD;AAAWb,IAAAA,SAAS,EAAEE;GAAtB,EAAsCZ,QAAQ,IAAIE,OAAlD,CATF,EAWGE,aAAa,IAAIS,mBAAA,CAACW,gBAAD,MAAA,EAAcpB,aAAd,CAXpB,CARF,CADF;AAwBD;;AC3DD;AAEA;AACA;AAEA;AAEA;IACMqB,qBAAqB,GAAG;AAC5Bf,EAAAA,SAAS,EAAE;AADiB;;;;;"}