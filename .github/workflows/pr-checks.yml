name: Pull Request checks

on: [pull_request]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                task: [lint, build, test]
        name: ${{ matrix.task }}
        steps:
            - name: Checkout the commit
              uses: actions/checkout@v2
              with:
                  # To make sure all history is fetched for jest --changedSince to work as expected
                  fetch-depth: ${{ ( matrix.task != 'test' && 1 ) || 0 }} # 0 for test, 1 otherwise
                  token: ${{ secrets.GH_ACTIONS_ACCESS_TOKEN }}

            # TODO replace this when setup-node action supports LTS alias
            - name: Set up Node
              uses: dcodeIO/setup-node-nvm@master
              with:
                  node-version: lts/*

            - name: Cache dependencies
              id: cache-deps
              uses: actions/cache@v2
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

            - name: Install dependencies
              # install deps only if lockfile has changed
              if: steps.cache-deps.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile

            - name: Set test CLI args
              if: ${{ matrix.task == 'test' }}
              run: echo "CLI_ARGS=--changedSince ${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV

            - name: Run ${{ matrix.task }}
              run: yarn ${{ matrix.task }}:ci ${{ env.CLI_ARGS }}
    e2e:
        name: E2E Tests
        # needs: [build]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Set up Node
              uses: dcodeIO/setup-node-nvm@master
              with:
                  node-version: lts/*

            - name: Cache dependencies
              id: cache-deps
              uses: actions/cache@v2
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

            - name: Install dependencies
              if: steps.cache-deps.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile

            - name: Make sure PlayWright doesn't play it wrong
              run: yarn add -WD playwright

            - name: Install WordPress
              run: yarn wp-env start

            - name: Setup Playwright
              uses: microsoft/playwright-github-action@v1

            # - name: Check out event-espresso-core
            #   uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675
            #   env:
            #       GIT_TRACE: 1
            #       GIT_CURL_VERBOSE: 1
            #   with:
            #       repository: eventespresso/event-espresso-core
            #       path: event-espresso-core
            #       persist-credentials: true
            #       ref: dev
            #       token: ${{ secrets.GH_ACTIONS_ACCESS_TOKEN }}

            # Deploy the built assets to core repo's assets/dist
            - name: Deploy to event-espresso-core
              run: source tools/deploy-test.sh "event-espresso-core" "dev"

            - name: Running the tests
              run: yarn test:e2e

            - name: Archive debug artifacts (screenshots, HTML snapshots)
              uses: actions/upload-artifact@v2
              # if: failure()
              with:
                  name: failures-artifacts
                  path: artifacts
