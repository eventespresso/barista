name: Pull Request checks

on: [pull_request]

env:
    PLAYWRIGHT_BROWSERS_PATH: 0 # See https://playwright.dev/docs/ci/#caching-browsers

jobs:
    # JOB to check if the files in a path have changed
    what-is-hit:
        runs-on: ubuntu-latest
        outputs:
            js: ${{ steps.filter.outputs.js }}
        steps:
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  base: ${{ github.ref }}
                  filters: |
                      js:
                        - 'domains/**'
                        - 'packages/**'
                        - 'yarn.lock'

    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                task: [lint, build, test]
        name: ${{ matrix.task }}
        needs: what-is-hit
        steps:
            - name: Checkout and yarn
              uses: eventespresso/actions/packages/checkout-and-yarn@main
              with:
                  # To make sure all history is fetched for jest --changedSince to work as expected
                  fetch-depth: ${{ ( matrix.task != 'test' && 1 ) || 0 }} # 0 for test, 1 otherwise

            - name: Set test CLI args
              if: ${{ matrix.task == 'test' }}
              run: echo "CLI_ARGS=--changedSince ${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV

            - name: Run ${{ matrix.task }}
              # Run the task only if JS is affected
              if: ${{ needs.what-is-hit.outputs.js == 'true' }}
              run: yarn ${{ matrix.task }}:ci ${{ env.CLI_ARGS }}

            - name: Upload build artifact
              uses: actions/upload-artifact@v2
              if: ${{ matrix.task == 'build' && needs.what-is-hit.outputs.js == 'true' }}
              with:
                  name: build
                  path: build/

    list-e2e-specs:
        runs-on: ubuntu-latest
        outputs:
            specs: ${{ steps.list.outputs.files }}
        steps:
            - uses: actions/checkout@v2
            # This step outputs a JSON object of e2e test paths - {"path": []}, which is passed to the e2e matrix
            - id: list
              run: echo "::set-output name=files::{\"path\":$(ls -d packages/e2e-tests/specs/* | jq -R -s -c 'split("\n")[:-1]')}"

    e2e:
        env:
            # If you want to run e2e in parallel to build:
            # - Set this to false
            # - Remove 'build' from needs:
            # - Comment out if:
            run_after_build: 'true'
        name: E2E Tests
        needs: [list-e2e-specs, what-is-hit, build]
        runs-on: ubuntu-latest
        # Run the job only if JS is affected
        if: ${{ needs.what-is-hit.outputs.js == 'true' }}
        strategy:
            matrix: ${{ fromJSON(needs.list-e2e-specs.outputs.specs) }}
            fail-fast: false
        steps:
            - name: Checkout and yarn
              uses: eventespresso/actions/packages/checkout-and-yarn@main

            - name: Download build artifact
              # Download artifact only if running after build job
              if: ${{ fromJson(env.run_after_build) }}
              uses: actions/download-artifact@v2
              with:
                  name: build
                  path: build/

            # Leave this here just in case "needs" field is removed, then it can be enabled
            - name: Build barista assets
              # Build assets only if running in parallel to build/test
              if: ${{ ! fromJson(env.run_after_build) }}
              run: yarn && yarn build

            # Since we map the barista build directory to core/assets, vendor scripts are not present
            # we need to copy them manually
            - name: Copy vendor assets
              run: |
                  mkdir -p build/vendor/
                  cp node_modules/ramda/dist/* build/vendor/

            - name: Install WordPress
              run: yarn wp-env start

            - name: Setup Playwright
              uses: microsoft/playwright-github-action@v1

            - name: Run E2E tests
              run: yarn test:e2e ${{ matrix.path }}

            - name: Archive debug artifacts (screenshots, HTML snapshots)
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: playwright-artifacts
                  path: artifacts

            - name: Post error to Slack
              if: ${{ failure() }}
              uses: rtCamp/action-slack-notify@v2
              env:
                  SLACK_CHANNEL: ee-tests
                  SLACK_COLOR: '#D80404'
                  SLACK_ICON_EMOJI: ':coffee:'
                  SLACK_TITLE: E2E tests failed
                  SLACK_MESSAGE: 'E2E tests Failed :interrobang:'
                  SLACK_USERNAME: barista
                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
