name: Deploy RC

on:
    push:
        branches:
            # If the branch name starts with "rc-"
            - rc-**
env:
    API_TOKEN_GITHUB: ${{ secrets.GH_ACTIONS_ACCESS_TOKEN }}
    GIT_USER_EMAIL: ${{ secrets.GH_ACTIONS_GIT_USER_EMAIL }}
    GIT_USER_NAME: ${{ secrets.GH_ACTIONS_GIT_USER_NAME }}
    FORCE_COLOR: true
jobs:
    # This job checks if we have the corresponding RC branch in at leat 1 target repo
    check-for-target-rc-branches:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master
            - name: Check for taget RC branches
              # It exits if there is no target RC branch
              run: |
                  source tools/utils.sh \
                  && checkForRcBranches
    deploy-domains-and-packages:
        runs-on: ubuntu-latest
        # There must be at least one target RC branch to continue
        needs: [check-for-target-rc-branches]
        steps:
            - name: Checkout the commit
              uses: actions/checkout@v2

            # TODO replace this when setup-node action supports LTS alias
            - name: Set up Node
              uses: dcodeIO/setup-node-nvm@master
              with:
                  node-version: lts/*

            - name: Cache dependencies
              id: cache-deps
              uses: actions/cache@v2
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

            # Install all dependencies at root
            - name: Install dependencies
              # install deps only if lockfile has changed
              if: steps.cache-deps.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile

              # Build the core domains along with all the packages
              # because all packages will goto core
            - name: Build and Deploy core domains and all their packages, if there is RC branch
              run: source tools/may-be-deploy-rc.sh "event-espresso-core" "build:core"

              # Build REM domain without packages
              # because core will load/register the packages
            - name: Build and Deploy REM with its packages, if there is RC branch
              run: source tools/may-be-deploy-rc.sh "eea-recurring-events-manager" "build:rem"
